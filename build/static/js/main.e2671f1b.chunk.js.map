{"version":3,"sources":["components/PrivateRoute/PrivateRoute.jsx","components/PublicRoute/PublicRoute.jsx","shared/Layout/Layout.jsx","App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/store.js","index.js","redux/contacts/contactsSelectors.js","redux/auth/authOperations.jsx","redux/auth/authSelectors.jsx","redux/contacts/contactsOperations.js","components/ContactsList/ContactsListItem/ContactListItem.module.css","redux/auth/authReducers.jsx","redux/filter/filterAction.js","shared/Notification/Notification.module.css","shared/Title/Title.module.css","shared/Loader/Loader.js","routes.js","shared/Notification/Notification.js","shared/Notification/index.js","redux/auth/authActions.jsx","shared/Loader/Loader.module.css","shared/Layout/Layout.module.css","components/ContactsList/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","shared/Title/Title.js","components/Form/Form.js","components/Filter/Filter.js","redux/contacts/contactsAction.js"],"names":["connect","state","isAuthenticated","authSelectors","Component","component","routeProps","render","props","to","restricted","Layout","children","className","styles","container","App","this","onGetCurrentUser","fallback","Loader","routes","map","route","idx","private","authOperations","getCurrentUser","contactReducer","createReducer","fetchContactsSuccess","action","payload","addContactSuccess","deleteContactSuccess","filter","contact","id","loading","addContactRequest","addContactError","fetchContactsRequest","fetchContactsError","deleteContactRequest","deleteContactError","filterReducer","filterContacts","_","authPersistConfig","key","storage","whitelist","rootReducer","auth","persistReducer","authReducer","contacts","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","getContacts","getFilter","getFilteredContacts","createSelector","name","toLowerCase","includes","getContactById","contactId","find","getLoading","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","message","login","loginRequest","loginSuccess","loginError","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","logout","logoutRequest","logoutSuccess","logoutError","getUserEmail","user","email","getErrorMessage","addContact","number","fetchContacts","deleteContact","delete","module","exports","initialState","combineReducers","createAction","InfoLoader","loader","type","color","height","width","exact","path","lazy","Notification","contactExists","in","appear","timeout","classNames","unmountOnExit","text","ownProps","contactsSelectors","contactsOperations","item","btn","onClick","searchContact","TransitionGroup","list","CSSTransition","Title","title","Form","handleChange","event","target","value","setState","handleSubmit","preventDefault","setTimeout","form","onSubmit","label","onChange","placeholder","input","required","button","mapDispatchToProps","filterContact","length"],"mappings":"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","file":"static/js/main.e2671f1b.chunk.js","sourcesContent":["import { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import styles from './Layout.module.css';\r\n\r\nconst Layout = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport default Layout;","import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute/PublicRoute';\r\nimport Title from './shared/Title';\r\nimport Loader from './shared/Loader';\r\nimport Layout from './shared/Layout';\r\nimport Form from './components/Form';\r\nimport ContactsList from './components/ContactsList';\r\nimport Filter from './components/Filter';\r\nimport contactsOperations from './redux/contacts/contactsOperations';\r\nimport contactsSelectors from './redux/contacts/contactsSelectors';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport routes from './routes';\r\nimport { authOperations } from './redux/auth';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Suspense fallback={<Loader />}>\r\n          <Switch>\r\n            {routes.map((route, idx) => {\r\n              return route.private ? (\r\n                <PrivateRoute key={idx} {...route} />\r\n              ) : (\r\n                <PublicRoute\r\n                  key={idx}\r\n                  {...route}\r\n                  restricted={route.restricted}\r\n                />\r\n              );\r\n            })}\r\n          </Switch>\r\n        </Suspense>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n})(App);","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contactsAction';\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst contactReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (state, action) => action.payload,\r\n  [addContactSuccess]: addContact,\r\n  [deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport { contactReducer, loading };","// import types from '../action-types';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport filterContacts from './filterAction';\r\n\r\n// без redux toolkit\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER_CONTACTS:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nexport default filterReducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { contactReducer, loading } from './contacts/contactsReducer';\r\nimport filter from './filter/filterReducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport authReducer from './auth/authReducers';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst rootReducer = {\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  contacts: contactReducer,\r\n  filter,\r\n  loading,\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [...getDefaultMiddleware({ serializableCheck: false })],\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.loading;\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getFilter = state => state.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactById = createSelector(\r\n  [(_, contactId) => contactId, getContacts],\r\n  (contactId, contacts) => {\r\n    return contacts.find(contact => contact.id === contactId);\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getFilter,\r\n  getFilteredContacts,\r\n  getContactById,\r\n};","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error.message)));\r\n};\r\n\r\nconst login = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => {\r\n      dispatch(authActions.getCurrentUserSuccess(data));\r\n    })\r\n    .catch(error => dispatch(authActions.getCurrentUserError(error)));\r\n};\r\n\r\nconst logout = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\nexport default { register, login, getCurrentUser, logout };","const isAuthenticated = state => state.auth.token;\r\nconst getUserEmail = state => state.auth.user.email;\r\nconst getErrorMessage = state => state.auth.error;\r\n\r\nexport default { isAuthenticated, getUserEmail, getErrorMessage };","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contactsAction';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\nexport default { addContact, fetchContacts, deleteContact };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1xzIY\",\"contact\":\"ContactListItem_contact__rWWb5\",\"btn\":\"ContactListItem_btn__ItH9A\"};","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialState = {\r\n  name: null,\r\n  email: null,\r\n};\r\n\r\nconst user = createReducer(initialState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});","import { createAction } from '@reduxjs/toolkit';\r\n// import types from '../action-types';\r\n\r\n// без redux toolkit\r\n// const filterContacts = value => ({\r\n//   type: types.FILTER_CONTACTS,\r\n//   payload: {\r\n//     value,\r\n//   },\r\n// });\r\nconst filterContacts = createAction('FILTER_CONTACTS');\r\n\r\nexport default filterContacts;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__3-cmD\",\"text\":\"Notification_text__3H0Xp\",\"enter\":\"Notification_enter__vAqXg\",\"enterActive\":\"Notification_enterActive__3HqGU\",\"exit\":\"Notification_exit__3-zVa\",\"exitActive\":\"Notification_exitActive__3ZR9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2WO1_\",\"appear\":\"Title_appear__GeBhx\",\"appearActive\":\"Title_appearActive__38m0H\"};","import React from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\n\r\nconst InfoLoader = () => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <Loader type=\"ThreeDots\" color=\"#f1392d\" height={50} width={50} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoLoader;","import { lazy } from 'react';\r\n\r\nconst routes = [\r\n  {\r\n    exact: true,\r\n    path: '/',\r\n    name: 'Home',\r\n    component: lazy(() => import('./pages/Home/Home')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: lazy(() => import('./pages/Registration/Registration')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: lazy(() => import('./pages/Loginization/Loginization')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/contacts',\r\n    name: 'Contacts',\r\n    component: lazy(() => import('./pages/Contacts/Contacts')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ contactExists }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={contactExists}\r\n      appear={true}\r\n      timeout={250}\r\n      classNames={styles}\r\n      unmountOnExit\r\n    >\r\n      <div className={styles.container}>\r\n        <p className={styles.text}>Contact already exists!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Notification;","export { default } from './Notification';","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1V4wz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__1WS90\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsSelectors from '../../../redux/contacts/contactsSelectors'\r\nimport contactsOperations from '../../../redux/contacts/contactsOperations';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactsListItem = ({ name, number, deleteContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.contact}>{name}</p>\r\n      <p className={styles.contact}>{number}</p>\r\n      <button type=\"button\" className={styles.btn} onClick={deleteContact}>\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = contactsSelectors.getContactById(state, ownProps.id);\r\n  return { ...contact };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  deleteContact: () => dispatch(contactsOperations.deleteContact(ownProps.id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsListItem);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport styles from './ContactsList.css';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactsList = ({ searchContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {searchContact.map(({ id, name, number }) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={styles}>\r\n            <ContactsListItem id={id}></ContactsListItem>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  searchContact: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { contacts, filter } = state;\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n  return {\r\n    searchContact: filteredContacts,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(ContactsList);","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Title.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <CSSTransition in={true} appear={true} timeout={500} classNames={styles}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Title;","import React, { Component } from 'react';\r\nimport styles from './Form.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Notification from '../../shared/Notification'\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\n\r\nclass Form extends Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    if (this.props.contacts.find(({ name }) => name === contact.name)) {\r\n      this.setState({ contactExists: true });\r\n      setTimeout(() => this.setState({ contactExists: false }), 1500);\r\n      return;\r\n    }\r\n    this.props.addContact(contact);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number, contactExists } = this.state;\r\n    return (\r\n      <>\r\n        <Notification contactExists={contactExists} />\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Enter your full name\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"xxx-xx-xx\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n          </label>\r\n          <input type=\"submit\" value=\"Add contact\" className={styles.button} />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactsOperations.addContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React from 'react';\r\nimport styles from './Filter.css';\r\nimport PropTypes from 'prop-types';\r\nimport {CSSTransition } from 'react-transition-group'; \r\nimport { connect } from 'react-redux';\r\nimport filterContacts from '../../redux/filter/filterAction';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\n\r\nconst Filter = ({ filter, filterContact, contacts }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={contacts.length > 1}\r\n      appear={true}\r\n      timeout={250}\r\n      unmountOnExit\r\n      classNames={styles}\r\n    >\r\n      <div className={styles.container}>\r\n        <label className={styles.label}>\r\n          Find contacts by name\r\n          <input\r\n            className={styles.input}\r\n            onChange={event => filterContact(event.target.value)}\r\n            value={filter}\r\n          />\r\n        </label>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.filter,\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  filterContact: filterContacts,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('ADD_CONTACT_REQUEST');\r\nconst addContactSuccess = createAction('ADD_CONTACT_SUCCESS');\r\nconst addContactError = createAction('ADD_CONTACT_ERROR');\r\n\r\nconst fetchContactsRequest = createAction('FETCH_CONTACTS_REQUEST');\r\nconst fetchContactsSuccess = createAction('FETCH_CONTACTS_SUCCESS');\r\nconst fetchContactsError = createAction('FETCH_CONTACTS_ERROR');\r\n\r\nconst deleteContactRequest = createAction('DELETE_CONTACT_REQUEST');\r\nconst deleteContactSuccess = createAction('DELETE_CONTACT_SUCCESS');\r\nconst deleteContactError = createAction('DELETE_CONTACT_ERROR');\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};"],"sourceRoot":""}